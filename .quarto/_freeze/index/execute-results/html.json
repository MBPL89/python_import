{
  "hash": "13984495804c727b50b10bc4264dc541",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"5. Importing libraries\"\nauthor: \"Dr. Bartosiak\"\nformat: \n  live-html:\n    toc: true\n    toc-depth: 2\n    link-external-icon: true\n    link-external-newwindow: true\npyodide:\n  packages:\n    - seaborn\neditor_options: \n  chunk_output_type: console\n---\n\n\n# Importing Libraries in Python  \n\nIn Python, **libraries** (also called modules or packages) contain pre-written code that you can use to simplify your work. Instead of writing everything from scratch, you can **import** libraries to access functions, classes, and tools for various tasks such as data analysis, web development, and machine learning.  \n\n---\n\n## 1. Importing a Library\nTo use a library in Python, you need to **import** it using the `import` keyword.  \n\n\n**Example: Importing the math Library**\n\n```{pyodide}\n#| autorun: false\n#| startover: false\n#| min-lines: 3\n#| completion: true\n\nimport math  \n\n# Use a function from the math library  \nresult = math.sqrt(25)  \nprint(result)  # Output: 5.0\n\n```\n\n\nHere, we import the `math` library and use `math.sqrt()` to calculate the square root of 25.\n\n:::{collout-note}\nNotice how we call functions from the imported libraries. We first type the library name (`math`) followed by a `.` and the function name (`sqrt()`)\n:::\n\n## 2. Importing with an Alias\n\nYou can rename a library using the `as` keyword to shorten the name for convenience.\n\n**Example: Importing NumPy with an Alias**\n\n```{pyodide}\n#| autorun: false\n#| startover: false\n#| min-lines: 3\n#| completion: true\n\nimport numpy as np  \n\narray = np.array([1, 2, 3, 4])  \nprint(array)\n```\n\n\nHere, `numpy` is imported as `np`, making it easier to call its functions.\n\n**Exercise**\n*Import `pandas` library. Use an Alias so that you can run the code below.* \n\n```{pyodide}\n#| autorun: false\n#| startover: false\n#| min-lines: 3\n#| completion: true\n\n#import your library here \n\ndf = pd.DataFrame({'Name': ['Alice', 'Bob'], 'Age': [25, 30]})  \nprint(df)\n```\n\n\n\n## 3. Importing Specific Functions\n\nInstead of importing the entire library, you can import only the functions you need using from.\n\n**Example: Importing Specific Functions**\n\n\n```{pyodide}\n#| autorun: false\n#| startover: false\n#| min-lines: 3\n#| completion: true\nfrom math import sqrt, pi  \n\nprint(sqrt(16))  # Output: 4.0  \nprint(pi)        # Output: 3.141592653589793\n```\n\n\n## 4. Installing and Importing External Libraries\n\nSome libraries are built-in, but others need to be installed first using `pip`. As you know, we are using a simplified version of Python on this website, so you won't be able to run the code below.\n\n**Example: Installing Pandas**\n\n\n```{default}\npip install pandas\n```\n\n\nIf you are using colab to run your code, you need to add `!` to your `pip` statement. \n`pip` is a shell (terminal) command - an instruction that you type into a command-line interface (CLI) or terminal to interact with the operating system.. \n\nGoogle Colab is based on Jupyter notebooks an interactive version of Python, where commands executed with `!` are interpreted as shell (terminal) commands instead of Python code.\n\n\n```{default}\n!pip install mysql.connector\n```\n\n\n## 5. Commonly Used Libraries in Python\n\n| Library         | Purpose |\n|----------------|---------|\n| [`math`](https://docs.python.org/3/library/math.html) | Provides mathematical functions like square root, trigonometry, logarithms, and constants (e.g., `pi`). |\n| [`random`](https://docs.python.org/3/library/random.html) | Generates random numbers, shuffles lists, and selects random elements, useful for simulations and games. |\n| [`datetime`](https://docs.python.org/3/library/datetime.html) | Allows working with dates and times, including formatting, comparisons, and time zone handling. |\n| [`numpy`](https://numpy.org/doc/stable/) | Supports numerical computing with powerful array structures and mathematical functions, essential for data science. |\n| [`pandas`](https://pandas.pydata.org/docs/) | Provides data structures like DataFrames for analyzing, cleaning, and manipulating structured data efficiently. |\n| [`matplotlib`](https://matplotlib.org/stable/contents.html) | A plotting library used to create graphs, charts, and visualizations for data analysis and reporting. |\n| [`requests`](https://docs.python-requests.org/en/latest/) | Enables sending HTTP requests to interact with web services and APIs, commonly used for fetching online data. |\n| [`mysql.connector`](https://dev.mysql.com/doc/connector-python/en/) | A MySQL database driver that allows Python to connect, query, and manage MySQL databases efficiently. |\n\n## **Key Takeaways**  \n\n* Use `import library_name` to access built-in libraries.\n* Use `import library_name as alias` to shorten library names.\n* Use `from library_name import function_name` to import specific functions.\n* Use `pip install library_name` to install external libraries before importing.\n\nBy mastering imports, you can leverage Pythonâ€™s vast ecosystem of libraries to write powerful and efficient code! ðŸš€\n\n\n\n```{=html}\n<style>\n.disclaimer {\n  font-size: 0.8em;\n  color: #666;\n  border-top: 1px solid #ddd;\n  padding-top: 10px;\n  margin-top: 20px;\n}\n</style>\n```\n\n```{=html}\n<div>\n<!-- Footer Section -->\n<div style=\"\n  width: 100vw;\n  height: auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #f9f9f9;\n  font-size: 12px;\n  border-top: 1px solid #ddd;\n  box-sizing: border-box;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: 10px 20px;\n\">\n  <!-- Left-aligned -->\n  <div style=\"text-align: left; font-size: 16px;\">\n    Â© 2025. All Rights Reserved.\n  </div>\n  \n\n  <!-- Right-aligned -->\n  <div style=\"text-align: right; font-size: 16px;\">\n    Enabled by Dr. Marcin Bartosiak</a>\n  </div>\n</div>\n\n<!-- Mobile Responsiveness -->\n<style>\n  @media screen and (max-width: 768px) {\n    div[style*=\"width: 100vw\"] {\n      flex-direction: column;\n      height: auto;\n      padding: 10px 15px;\n    }\n    \n    div[style*=\"width: 100vw\"] > div {\n      text-align: center;\n      margin-bottom: 5px;\n    }\n  }\n</style>\n\n</div>\n```\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}